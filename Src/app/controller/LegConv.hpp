#pragma once

// Include Files
#include <cmath>

// File: leg_conv.cpp
//
// MATLAB Coder version            : 23.2
// C/C++ source code generated on  : 10-Oct-2024 20:59:41
//

namespace app::controller {
// Function Definitions
//
//         _ _ T1
//          1*\
//          _ _\
//           2*/ T2
//            /
// LEG_CONV
//     T = LEG_CONV(F,Tp,PHI1,PHI2)
//
// Arguments    : double F
//                double Tp
//                double phi1
//                double phi2
//                double T[2]
// Return Type  : void
//
void leg_conv(double F, double Tp, double phi1, double phi2, double T[2]) {
    double a_tmp;
    double t12;
    double t17;
    double t20;
    double t21;
    //     This function was generated by the Symbolic Math Toolbox version 23.2.
    //     2024-10-10 20:43:15
    t12   = std::cos(phi1) * 0.18 + std::cos(phi2) * 0.18;
    a_tmp = std::sin(phi1) * 0.18 + std::sin(phi2) * 0.18;
    t17   = std::atan2(a_tmp, t12);
    t20   = phi1 - t17;
    t21   = phi2 - t17;
    t17   = Tp * (1.0 / std::sqrt(t12 * t12 + a_tmp * a_tmp));
    T[0]  = F * std::sin(t20) * -0.18 + t17 * std::cos(t20) * 0.18;
    T[1]  = F * std::sin(t21) * -0.18 + t17 * std::cos(t21) * 0.18;
}

//
// File trailer for leg_conv.cpp
//
// [EOF]
//
} // namespace app::controller
#pragma once
//
// File: leg_conv_reverse.cpp
//
// MATLAB Coder version            : 23.2
// C/C++ source code generated on  : 10-Oct-2024 22:39:41
//
// Include Files
#include <cmath>
namespace app::observer {

// Function Definitions
//
// LEG_CONV_REVERSE
//     T_r = LEG_CONV_REVERSE(T1,T2,PHI1,PHI2)
//
// Arguments    : double T1
//                double T2
//                double phi1
//                double phi2
//                double T_r[2]
// Return Type  : void
//
// 传入两角度之差不能是pi的整数倍
void leg_conv_reverse(double T1, double T2, double phi1, double phi2, double T_r[2]) {
    double t13;
    double t14_im_tmp;
    double t14_re_tmp;
    double t15;
    double t17;
    //     This function was generated by the Symbolic Math Toolbox version 23.2.
    //     2024-10-10 20:43:15
    t14_re_tmp = std::cos(phi1) * 0.18 + std::cos(phi2) * 0.18;
    t14_im_tmp = std::sin(phi1) * 0.18 + std::sin(phi2) * 0.18;
    t13        = 1.0 / std::sin(phi1 - phi2);
    t15        = std::atan2(t14_im_tmp, t14_re_tmp);
    t17        = phi1 - t15;
    t15        = phi2 - t15;
    T_r[0]     = t13 * (T1 * std::cos(t15) * 0.18 - T2 * std::cos(t17) * 0.18) * -30.8641975308642;
    T_r[1]     = t13 * std::sqrt(t14_im_tmp * t14_im_tmp + t14_re_tmp * t14_re_tmp)
           * (T1 * std::sin(t15) * 0.18 - T2 * std::sin(t17) * 0.18) * -30.8641975308642;
}

//
// File trailer for leg_conv_reverse.cpp
//
// [EOF]
//

} // namespace app::observer